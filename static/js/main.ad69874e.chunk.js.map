{"version":3,"sources":["components/images.js","components/loginModal.js","components/signUpDrawer.js","components/layout/mainNav.js","components/landingPageComponents/accordionInfo.js","components/landingPageComponents/infoHeader.jsx","components/layout/mainHeader.jsx","components/landingPage.js","App.js","index.js"],"names":["Images","LoginModal","useDisclosure","isOpen","onOpen","onClose","colorScheme","variant","textColor","onClick","leftIcon","as","AiOutlineLogin","isCentered","alignSelf","p","placeholder","mt","bgColor","ml","SignUpDrawer","btnRef","React","placement","finalFocusRef","size","spacing","id","type","isRequired","MainNav","Links","NavLink","children","px","py","rounded","_hover","textDecoration","bg","useColorModeValue","href","zIndex","bgPosition","mb","h","alignItems","justifyContent","icon","Close","Hamburger","display","md","base","map","link","pb","MainInfo","align","justify","w","flex","textAlign","fontSize","fontWeight","fontStyle","fontFamily","alt","src","InfoHeader","d","MainHeader","borderBottomRadius","mx","color","LandingPage","orientation","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad69874e.chunk.js","sourcesContent":["import { Stack, VStack, HStack, Box, Image, SimpleGrid } from \"@chakra-ui/react\";\r\nimport Photo from \"./image_components/image_component\";\r\nfunction Images() {\r\n\r\n    return (\r\n\r\n        <Box\r\n            padding={4}\r\n            w=\"100%\"\r\n            maxW=\"1100px\"\r\n            mx=\"auto\"\r\n            bg=\"white\"  \r\n            sx={{ columnCount: [1, 2, 3], columnGap: \"8px\" }}\r\n        >\r\n            <Photo />\r\n            <Photo />\r\n            <Photo />\r\n            <Photo />\r\n            <Photo />\r\n            <Photo />\r\n            <Photo />\r\n            <Photo />\r\n            <Photo />\r\n            <Photo />\r\n            <Photo />\r\n            <Photo />\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default Images;","import {\r\n    Modal,\r\n    ModalOverlay,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    Button,\r\n    Input,\r\n    FormControl,\r\n    FormLabel,\r\n    useDisclosure,\r\n  } from \"@chakra-ui/react\"\r\nimport { Icon } from '@chakra-ui/react';\r\nimport { AiOutlineLogin } from 'react-icons/ai'\r\n\r\n\r\nfunction LoginModal() {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n\r\n    return (\r\n        <>\r\n            <Button \r\n                colorScheme={\"cyan\"}\r\n                variant={\"ghost\"}\r\n                textColor={\"cyan.300\"}\r\n                onClick={onOpen}\r\n                leftIcon={<Icon as={AiOutlineLogin} />}\r\n                >Login\r\n            </Button>\r\n\r\n            <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader alignSelf={\"center\"} as={\"em\"}>Login</ModalHeader>\r\n                    <ModalCloseButton textColor={\"red.400\"}/>\r\n                    <ModalBody p={4}>\r\n                        <FormControl>\r\n                            <FormLabel>Username</FormLabel>\r\n                            <Input placeholder={\"Username\"} />\r\n                        </FormControl>\r\n                        <FormControl mt={4}>\r\n                            <FormLabel>Password</FormLabel>\r\n                            <Input placeholder={\"Password\"} />\r\n                        </FormControl>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button colorScheme={\"cyan\"} variant={\"solid\"} bgColor={\"cyan.300\"}>Login</Button>\r\n                        <Button onClick={onClose} ml={4}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginModal;","import {\r\n    Drawer,\r\n    DrawerBody,\r\n    DrawerFooter,\r\n    DrawerHeader,\r\n    DrawerOverlay,\r\n    DrawerContent,\r\n    DrawerCloseButton,\r\n    useDisclosure,\r\n    Button,\r\n    HStack,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Select,\r\n    Center,\r\n    Stack,\r\n    Divider,\r\n    VStack,\r\n    Box,\r\n  } from \"@chakra-ui/react\"\r\n  import * as React from \"react\";\r\n\r\n\r\nfunction SignUpDrawer() {\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const btnRef = React.useRef()\r\n\r\n    return (\r\n        <>\r\n            <Button colorScheme={\"cyan\"} variant={\"solid\"} bgColor={\"cyan.300\"} onClick={onOpen}>Sign Up</Button>\r\n            <Drawer isOpen={isOpen} placement={\"right\"} onClose={onClose} finalFocusRef={btnRef} size={\"sm\"}>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerCloseButton />\r\n                    <DrawerHeader as={\"em\"} p={\"5\"}>Sign Up</DrawerHeader>\r\n                    <Divider />\r\n\r\n                    <DrawerBody>\r\n                        <Stack spacing={\"20px\"}>\r\n                            <HStack spacing={\"20px\"}>\r\n                                <FormControl id=\"first-name\">\r\n                                    <FormLabel>First Name</FormLabel>\r\n                                    <Input type=\"text\" placeholder=\"First name\" />\r\n                                </FormControl>\r\n                                <FormControl id=\"last-name\">\r\n                                    <FormLabel>Last Name</FormLabel>\r\n                                    <Input type=\"text\" placeholder=\"Last name\" />\r\n                                </FormControl>\r\n                            </HStack>\r\n                            <HStack>\r\n                                <FormControl id=\"country\">\r\n                                    <FormLabel>Country</FormLabel>\r\n                                    <Select placeholder={\"Select a country\"} size={\"md\"}>\r\n                                        <option>Canada</option>\r\n                                        <option>US</option>\r\n                                        <option>Germany</option>\r\n                                        <option>France</option>\r\n                                        <option>China</option>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <FormControl>\r\n                                    <FormLabel>Date Of Birth</FormLabel>\r\n                                    <Input type={\"date\"}></Input>\r\n                                </FormControl>\r\n                            </HStack>\r\n                            <Center>\r\n                                <FormControl id=\"email\" isRequired>\r\n                                    <Input type={\"email\"} placeholder={\"Email\"} />\r\n                                </FormControl>\r\n                            </Center>\r\n                            <VStack>\r\n                                <FormControl id=\"password\">\r\n                                        <FormLabel>Password: </FormLabel>\r\n                                        <Input type={\"password\"} placeholder=\"Enter a password\" />\r\n                                </FormControl>\r\n                                <FormControl>\r\n                                    <Input type={\"password\"} placeholder={\"Confirm password\"}/>\r\n                                </FormControl>\r\n                            </VStack>\r\n                        </Stack>\r\n\r\n                    </DrawerBody>\r\n                    <DrawerFooter>\r\n                        <HStack>\r\n                            <Button type={\"submit\"} colorScheme={\"green\"} >Sign Up</Button>\r\n                            <Button onClick={onClose}>Cancel</Button>\r\n                        </HStack>\r\n                    </DrawerFooter>\r\n                </DrawerContent>\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignUpDrawer","import {\r\n  Box,\r\n  Flex,\r\n  HStack,\r\n  Link,\r\n  IconButton,\r\n  useDisclosure,\r\n  useColorModeValue,\r\n  Stack,\r\n} from '@chakra-ui/react';\r\nimport { HamburgerIcon, CloseIcon } from '@chakra-ui/icons';\r\n\r\nimport LoginModal from '../loginModal';\r\nimport SignUpDrawer from '../signUpDrawer';\r\n\r\nfunction MainNav() {\r\n    const Links = ['Home', 'About', 'Contact Us'];\r\n    const NavLink = ({ children }) => (\r\n        <Link\r\n            px={2}\r\n            py={1}\r\n            rounded={'md'}\r\n            _hover={{\r\n                textDecoration: 'none',\r\n                bg: useColorModeValue('gray.200', 'gray.700'),\r\n            }}\r\n            href={'#'}>\r\n            {children}\r\n        </Link>\r\n    )\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    return (\r\n        <>\r\n            <Box as={\"nav\"} zIndex={\"overlay\"} bgPosition={\"sticky top\"} mb={\"4\"} bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\r\n              <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\r\n                <IconButton\r\n                  size={'md'}\r\n                  icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\r\n                  aria-label={\"Open Menu\"}\r\n                  display={{ md: 'none' }}\r\n                  onClick={isOpen ? onClose : onOpen}\r\n                />\r\n                <HStack spacing={8} alignItems={'center'}>\r\n                  <Box>Logo</Box>\r\n                  <HStack\r\n                    as={'nav'}\r\n                    spacing={4}\r\n                    display={{ base: 'none', md: 'flex' }}>\r\n                    {Links.map((link) => (\r\n                      <NavLink key={link}>{link}</NavLink>\r\n                    ))}\r\n                  </HStack>\r\n                </HStack>\r\n                <Flex alignItems={'center'}>\r\n                  <HStack spacing={3}>\r\n                    <LoginModal />\r\n                    <SignUpDrawer />\r\n                  </HStack>\r\n                </Flex>\r\n              </Flex>\r\n              {isOpen ? (\r\n                <Box pb={4} display={{ md: 'none' }}>\r\n                  <Stack as={'nav'} spacing={4}>\r\n                    {Links.map((link) => (\r\n                    <NavLink key={link}>{link}</NavLink>\r\n                    ))}\r\n                  </Stack>\r\n                </Box>\r\n              ) : null}  \r\n\r\n            </Box>\r\n                    \r\n      </>\r\n    )\r\n}\r\n\r\nexport default MainNav;","import {\r\n    Accordion,\r\n    AccordionItem,\r\n    AccordionButton,\r\n    AccordionPanel,\r\n    AccordionIcon,\r\n    Box,\r\n    HStack,\r\n    Heading,\r\n    Text,\r\n    Image\r\n} from \"@chakra-ui/react\"\r\n\r\n\r\nfunction MainInfo(){\r\n\r\n    return (\r\n        <HStack align={\"stretch\"} spacing={1} justify={\"center\"} mt={4}>\r\n            <Box w={\"full\"} h={\"400px\"} bg={\"ghostwhite\"}>\r\n                <Accordion>\r\n                    <AccordionItem>\r\n                        <AccordionButton>\r\n                            <Box flex={\"1\"} textAlign={\"left\"}>\r\n                                <Text fontSize={\"lg\"} fontWeight={\"hairline\"} fontStyle={\"oblique\"} fontFamily={\"mono\"}>Photo storage on the go</Text>\r\n                            </Box>\r\n                            <AccordionIcon />\r\n                        </AccordionButton>\r\n                        <AccordionPanel p={4}>\r\n                            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Harum doloribus ducimus corporis dolorum sunt deleniti \r\n                            dolores voluptas laborum consequatur perspiciatis, omnis ratione magnam fugiat ea nostrum autem recusandae tempora hic.\r\n                        </AccordionPanel>\r\n                    </AccordionItem>\r\n                    <AccordionItem>\r\n                        <AccordionButton>\r\n                            <Box flex={\"1\"} textAlign={\"left\"}>\r\n                                <Text fontSize={\"lg\"} fontWeight={\"hairline\"} fontStyle={\"oblique\"} fontFamily={\"mono\"}>Photo lookup made easy</Text>\r\n                            </Box>\r\n                            <AccordionIcon />\r\n                        </AccordionButton>\r\n                        <AccordionPanel>\r\n                            Lorem ipsum, dolor sit amet consectetur adipisicing elit. Quo temporibus nostrum numquam vero reprehenderit, \r\n                            aspernatur et ratione ab, amet hic labore consequuntur cum natus est architecto itaque ullam, maiores distinctio.\r\n                        </AccordionPanel>\r\n                    </AccordionItem>\r\n                    <AccordionItem>\r\n                        <AccordionButton>\r\n                            <Box flex={\"1\"} textAlign={\"left\"}>\r\n                                <Text fontSize={\"lg\"} fontWeight={\"hairline\"} fontStyle={\"oblique\"} fontFamily={\"mono\"}>Securely share your photos</Text>\r\n                            </Box>\r\n                            <AccordionIcon />\r\n                        </AccordionButton>\r\n                        <AccordionPanel>\r\n                            Lorem ipsum dolor, sit amet consectetur adipisicing elit. Repellat corporis accusamus, sunt placeat cum \r\n                            similique praesentium quod maxime odio, a odit doloribus nostrum saepe. Corporis eos delectus amet cum nam.\r\n                        </AccordionPanel>\r\n                    </AccordionItem>\r\n                    <AccordionItem>\r\n                        <AccordionButton>\r\n                            <Box flex={\"1\"} textAlign={\"left\"}>\r\n                                <Text fontSize={\"lg\"} fontWeight={\"hairline\"} fontStyle={\"oblique\"} fontFamily={\"mono\"}>Download anywhere</Text>\r\n                            </Box>\r\n                            <AccordionIcon />\r\n                        </AccordionButton>\r\n                        <AccordionPanel>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias, ipsum. Illum minima nulla officia expedita est eos velit, praesentium,\r\n                            excepturi, quod laboriosam architecto consequuntur reiciendis assumenda similique vel nesciunt corrupti.\r\n                        </AccordionPanel>\r\n                    </AccordionItem>\r\n                </Accordion>\r\n            </Box>\r\n            <Box w={\"full\"} h={\"400px\"} bg={\"gray.700\"}>\r\n                <Image\r\n                    w={\"full\"}\r\n                    h={\"full\"}\r\n                    alt={\"photo gallery\"}\r\n                    src={\"https://images.unsplash.com/photo-1500051638674-ff996a0ec29e?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nzl8fGdhbGxlcnl8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"} />\r\n            </Box>\r\n        </HStack>\r\n    )\r\n}\r\n\r\nexport default MainInfo","import {\r\n    Heading,\r\n    Box,\r\n    Text,\r\n} from \"@chakra-ui/react\"\r\n\r\nfunction InfoHeader() {\r\n    \r\n    return (\r\n        <Box d={\"flex\"} as={\"header\"} h={\"100px\"} w={\"full\"} justifyContent={\"center\"} mt={8}>\r\n            <Heading as={\"h4\"} fontSize={\"3xl\"} fontFamily={\"body\"} fontWeight={\"medium\"} alignSelf={\"center\"}>What makes us special</Heading>\r\n            <Text></Text>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default InfoHeader","import {\r\n    Box,\r\n    Heading,\r\n    VStack,\r\n} from \"@chakra-ui/react\"\r\n\r\nfunction MainHeader() {\r\n    \r\n    return (\r\n            <Box d={\"flex\"} as={\"header\"} w={\"full\"} h={\"200px\"} bgColor={\"gray.300\"} borderBottomRadius={\"3xl\"}>\r\n                <VStack justifyContent={\"center\"} mx={\"auto\"} alignItems={\"flex-end\"}>\r\n                    <Heading as={\"h1\"} size={\"2xl\"} colorScheme={\"cyan\"} color={\"cyan.800\"} mx={\"auto\"}>Photo Gallery</Heading>\r\n                    <Heading as={\"h4\"} size={\"sm\"} colorScheme={\"cyan\"} color={\"cyan.100\"} mx={\"auto\"}>Your Personal Gallery</Heading>\r\n                </VStack>\r\n            </Box>\r\n    )\r\n}\r\n\r\nexport default MainHeader","import {\r\n    Box,\r\n    Divider,\r\n} from \"@chakra-ui/react\"\r\n\r\nimport MainInfo from \"./landingPageComponents/accordionInfo\"\r\nimport InfoHeader from \"./landingPageComponents/infoHeader\"\r\nimport MainHeader from \"./layout/mainHeader\"\r\n\r\nfunction LandingPage() {\r\n\r\n    return (\r\n        <Box mx={\"auto\"} h=\"100vh\" w={\"99%\"}>\r\n            <MainHeader />\r\n            <InfoHeader />\r\n            <Divider orientation={\"horizontal\"} />\r\n            <MainInfo />\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LandingPage","import * as React from \"react\";\r\nimport {Stack } from \"@chakra-ui/react\"\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\n\r\nimport Images from \"./components/images\";\r\nimport MainNav from \"./components/layout/mainNav\";\r\nimport LandingPage from \"./components/landingPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ChakraProvider>\r\n      <MainNav />\r\n      <Stack>\r\n        <LandingPage />\r\n        {/* <Images /> */}\r\n      </Stack>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}